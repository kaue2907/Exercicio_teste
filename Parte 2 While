{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNl2XJQLQUpxHMhWgSrnpJJ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kaue2907/Exercicio_teste/blob/main/Parte%202%20While\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Faça um programa que calcule e mostre a média aritmética de N notas."
      ],
      "metadata": {
        "id": "S7G3TCkbhINY"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "T0Fdcof6gXP6"
      },
      "outputs": [],
      "source": [
        "n = int(input(\"Digite quantas notas você deseja somar: \"))\n",
        "total = 0\n",
        "contador = 0\n",
        "while contador < n:\n",
        "  nota = float(input(\"Digite a nota: \"))\n",
        "  total += nota\n",
        "  contador += 1\n",
        "  print(\"A soma das\", n ,\"notas é:\", total)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Um funcionário de uma empresa recebe aumento salarial anualmente.\n",
        "Sabe-se que: Esse funcionário foi contratado em 1995, com salário inicial de R$\n",
        "1.000,00; Em 1996 recebeu aumento de 1,5% sobre seu salário inicial; A partir de\n",
        "1997 (inclusive), os aumentos salariais sempre correspondem ao dobro do\n",
        "percentual do ano anterior. Faça um programa que determine o salário atual desse\n",
        "funcionário. Após concluir isto, altere o programa permitindo que o usuário digite o\n",
        "salário inicial do funcionário."
      ],
      "metadata": {
        "id": "REctsEi-jh7_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "htY08cZOjhlF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Faça um programa que leia e valide as seguintes informações:\n",
        " Nome: maior que 3 caracteres;\n",
        " Idade: entre 0 e 150;\n",
        " Salário: maior que zero;\n",
        " Sexo: 'f' ou 'm';\n",
        " Estado Civil: 's', 'c', 'v', 'd';"
      ],
      "metadata": {
        "id": "jxDj0P6UvBUS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "nome = (input(\"Digite seu nome:\"))\n",
        "while len(nome) < 3:\n",
        " nome = (input(\"Digite o nome corretamnete: \"))\n",
        " print(\"bem-vindo\")\n",
        "\n",
        "idade = int(input(\"Digite sua idade: \"))\n",
        "while idade < 0 or idade > 150:\n",
        "  idade = int(input(\"Digite a idade correta: \"))\n",
        "\n",
        "salario = int(input(\"Digite seu salário: \"))\n",
        "while salario < 0:\n",
        "  salario = int(input(\"Digite seu salario novamente: \"))\n",
        "\n",
        "sexo = (input(\"Digite 'f' para Feminino ou 'm' para Masculino: \"))\n",
        "while sexo != \"f\" and sexo != \"m\":\n",
        "  print(\"Digite um sexo correspondente: \")\n",
        "\n",
        "if sexo == \"f\":\n",
        "   print(\"feminino\")\n",
        "\n",
        "else:\n",
        "   print(\"masculino\")\n",
        "\n",
        "estado_civil = (input(\"Digite 's', 'c', 'v' ou 'd': \"))\n",
        "while estado_civil != \"s\" and estado_civil != \"c\" and estado_civil != \"v\" and estado_civil != \"d\":\n",
        "  print(\"Estado civil inválido\")\n",
        "\n",
        "if estado_civil == \"s\":\n",
        "  print(\"solteiro\")\n",
        "\n",
        "elif estado_civil == \"c\":\n",
        "  print(\"casado\")\n",
        "\n",
        "elif estado_civil == \"v\":\n",
        "  print(\"viúvo\")\n",
        "\n",
        "else:\n",
        "  print(\"divorciado\")"
      ],
      "metadata": {
        "id": "z9DIzvyIz8or"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Nova seção"
      ],
      "metadata": {
        "id": "0tMpWPep-u9e"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Supondo que a população de um país A seja da ordem de 80000 habitantes com\n",
        "uma taxa anual de crescimento de 3% e que a população de B seja 200000\n",
        "habitantes com uma taxa de crescimento de 1.5%. Faça um programa que calcule e\n",
        "escreva o número de anos necessários para que a população do país A ultrapasse\n",
        "ou iguale a população do país B, mantidas as taxas de crescimento."
      ],
      "metadata": {
        "id": "oFdMyOYG0eFV"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "8z_biNq-0fJ8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Faça um programa que calcule o fatorial de um número inteiro fornecido pelo\n",
        "usuário. Ex.: 5!=5.4.3.2.1=120"
      ],
      "metadata": {
        "id": "Vzx3-LYc0hyS"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "UTJ28IK40i1v"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Faça um programa que solicite ao usuário números indefinidamente até que ele\n",
        "digite 0. Em seguida, o programa deve imprimir a média dos números digitados."
      ],
      "metadata": {
        "id": "Y7u3AUrt0jgm"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "gH61DI2e0nLD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "A série de Fibonacci é formada pela sequência 1,1,2,3,5,8,13,21,34,55,... Faça um\n",
        "programa capaz de gerar a série até o n−ésimo termo."
      ],
      "metadata": {
        "id": "QzDc2m230o9g"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "70nRA57u0sDr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "O Sr. Manoel Joaquim expandiu seus negócios para além dos negócios de 1,99 e\n",
        "agora possui uma loja de conveniências. Faça um programa que implemente uma\n",
        "caixa registradora rudimentar.\n",
        " O programa deverá receber um número desconhecido de valores referentes\n",
        "aos preços das mercadorias. Um valor zero deve ser informado pelo\n",
        "operador para indicar o final da compra.\n",
        " O programa deve então mostrar o total da compra e perguntar o valor em\n",
        "dinheiro que o cliente forneceu, para então calcular e mostrar o valor do\n",
        "troco. Após esta operação, o programa deverá voltar ao ponto inicial, para\n",
        "registrar a próxima compra.\n",
        " A saída deve ser conforme o exemplo abaixo:\n",
        " Lojas Tabajara\n",
        " Produto 1: R$ 2.20\n",
        " Produto 2: R$ 5.80\n",
        " Produto 3: R$ 0\n",
        " Total: R$ 9.00\n",
        " Dinheiro: R$ 20.00\n",
        " Troco: R$ 11.00"
      ],
      "metadata": {
        "id": "FuZj5v370yAo"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "4jbnT_Kt0y6h"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "O cardápio de uma lanchonete é o seguinte:\n",
        "Especificação Código Preço\n",
        " Cachorro Quente 100 R$ 1,20\n",
        " Bauru Simples 101 R$ 1,30\n",
        " Bauru com ovo 102 R$ 1,50\n",
        " Hambúrguer 103 R$ 1,20\n",
        " Cheeseburguer 104 R$ 1,30\n",
        " Refrigerante 105 R$ 1,00\n",
        "Faça um programa que leia o código dos itens pedidos e as quantidades desejadas.\n",
        "Calcule e mostre o valor a ser pago por item (preço * quantidade) e o total geral do\n",
        "pedido. Considere que o cliente deve informar quando o pedido deve ser encerrado."
      ],
      "metadata": {
        "id": "y7URxte10z5T"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "_OsCcwkO033x"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Em uma eleição presidencial existem quatro candidatos. Os votos são informados\n",
        "por meio de código.\n",
        "Os códigos utilizados são:\n",
        " 1, 2, 3, 4 - Votos para os respectivos candidatos\n",
        " (você deve montar a tabela ex: 1 - Jose/ 2- João/etc)\n",
        " 5 - Voto Nulo\n",
        " 6 - Voto em Branco\n",
        "Faça um programa que calcule e mostre:\n",
        " O total de votos para cada candidato;\n",
        " O total de votos nulos;\n",
        " O total de votos em branco;\n",
        " A percentagem de votos nulos sobre o total de votos;\n",
        " A percentagem de votos em branco sobre o total de votos.\n",
        "Para finalizar o conjunto de votos tem-se o valor zero."
      ],
      "metadata": {
        "id": "-KwvJFUU07WD"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "4wfFplux08YT"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}